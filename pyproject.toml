[project]
name = "flaskblog"
version = "0.12.0"
description = "A microblog based on the Flask web framework"
requires-python = ">=3.9.0, <3.14.0"
dependencies = [
    "alembic (==1.7.6)",
    "blinker (==1.4)",
    "click (==8.0.3)",
    "Deprecated (==1.2.13)",
    "dnspython (==2.2.0)",
    "dominate (==2.6.0)",
    "elastic-transport (==8.0.1)",
    "elasticsearch (==8.0.0)",
    "email-validator (==1.1.3)",
    "Flask (==2.0.2)",
    "Flask-Bootstrap (==3.3.7.1)",
    "Flask-HTTPAuth (==4.5.0)",
    "Flask-Login (==0.5.0)",
    "Flask-Mail (==0.9.1)",
    "Flask-Migrate (==3.1.0)",
    "Flask-Moment (==1.0.2)",
    "Flask-SQLAlchemy (==2.5.1)",
    "Flask-WTF (==1.0.0)",
    "greenlet (==3.1.1)",
    "itsdangerous (==2.0.1)",
    "Jinja2 (==3.0.3)",
    "Mako (==1.1.6)",
    "MarkupSafe (==2.1.1)",
    "packaging (==21.3)",
    "PyJWT (==2.3.0)",
    "pyparsing (==3.0.7)",
    "python-dateutil (==2.8.2)",
    "python-dotenv (==0.19.2)",
    "python-editor (==1.0.4)",
    "redis (==4.1.4)",
    "rq (==1.10.1)",
    "six (==1.16.0)",
    "SQLAlchemy (==1.4.31)",
    "visitor (==0.1.3)",
    "Werkzeug (==2.0.3)",
    "wrapt (==1.14.0)",
    "WTForms (==3.0.1)",
]
authors = [
    { name = "Kevin Bowen", email = "kevin.bowen@gmail.com" },
]
maintainers = [
]
license = { text = "MIT" }
readme = "README.md"
keywords = ["flask","web-application","blog",]

classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Flask",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP",
]

[project.urls]
Homepage = "https://github.com/kevinbowen777/flaskblog.git"
Changelog = "https://github.com/kevinbowen777/flaskblog/NEWS"
Repository = "https://github.com/kevinbowen777/flaskblog.git"
Documentation = "file:///docs/_build/index.html"

[tool.poetry.group.dev.dependencies]
certifi = "2021.10.8"
chardet = "4.0.0"
charset-normalizer = "2.0.12"
defusedxml = "0.7.1"
Faker = "13.2.0"
httpie = "3.0.2"
idna = "3.3"
multidict = "6.1.0"
Pygments = "2.11.2"
PySocks = "1.7.1"
requests = "2.27.1"
requests-toolbelt = "0.9.1"
urllib3 = "1.26.8"
pre-commit = "3.5.0"
ruff = ">=0.8, <1.0"
nox = "2024.10.09"

[tool.poetry.requires-plugins]
poetry-plugin-export = ">=1.8"

[tool.ruff]
preview = true
respect-gitignore = true
unsafe-fixes = false

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.13.x
target-version = "py313"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".mypy_cache",
    ".nox",
    ".ruff_cache",
    "__pycache__",
    "logs",
    "migrations",
    "images",
    "media",
]

[tool.ruff.lint]
select = [
    # "A",    # flake8-builtins
    "B",    # flake8-bugbear
    "C90",  # mccabe
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "S",    # flake8-bandit
    "W",    # pycodestyle warnings
    # "RUF",  # ruff checks
]
ignore = [
    "E501",    # line too long ({width} > {limit} characters)
    # "E203",  # slice notation whitespace (not currently supported)
    "E402",    # module level import not at top of file
    "E722",    # do not use bare except
    # "W503",  # (not currently supported)
    "ERA",     # do not autoremove commented out code
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"app/fake.py" = ["B007", "S106"]
"app/models.py" = ["S324"]  # insecure hash function #TODO
"app/__init__.py" = ["F401"]  # imported but unused #TODO
# "docs/conf.py" = ["A001"]

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, repspect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[build-system]
requires = ["poetry-core>=2.0.0"]
build-backend = "poetry.core.masonry.api"
